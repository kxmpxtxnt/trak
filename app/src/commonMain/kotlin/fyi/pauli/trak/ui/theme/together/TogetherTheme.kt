package fyi.pauli.trak.ui.theme.together

import androidx.compose.material3.darkColorScheme
import androidx.compose.material3.lightColorScheme

object TogetherTheme {
    val lightScheme = lightColorScheme(
        primary = TogetherThemeColors.primaryLight,
        onPrimary = TogetherThemeColors.onPrimaryLight,
        primaryContainer = TogetherThemeColors.primaryContainerLight,
        onPrimaryContainer = TogetherThemeColors.onPrimaryContainerLight,
        secondary = TogetherThemeColors.secondaryLight,
        onSecondary = TogetherThemeColors.onSecondaryLight,
        secondaryContainer = TogetherThemeColors.secondaryContainerLight,
        onSecondaryContainer = TogetherThemeColors.onSecondaryContainerLight,
        tertiary = TogetherThemeColors.tertiaryLight,
        onTertiary = TogetherThemeColors.onTertiaryLight,
        tertiaryContainer = TogetherThemeColors.tertiaryContainerLight,
        onTertiaryContainer = TogetherThemeColors.onTertiaryContainerLight,
        error = TogetherThemeColors.errorLight,
        onError = TogetherThemeColors.onErrorLight,
        errorContainer = TogetherThemeColors.errorContainerLight,
        onErrorContainer = TogetherThemeColors.onErrorContainerLight,
        background = TogetherThemeColors.backgroundLight,
        onBackground = TogetherThemeColors.onBackgroundLight,
        surface = TogetherThemeColors.surfaceLight,
        onSurface = TogetherThemeColors.onSurfaceLight,
        surfaceVariant = TogetherThemeColors.surfaceVariantLight,
        onSurfaceVariant = TogetherThemeColors.onSurfaceVariantLight,
        outline = TogetherThemeColors.outlineLight,
        outlineVariant = TogetherThemeColors.outlineVariantLight,
        scrim = TogetherThemeColors.scrimLight,
        inverseSurface = TogetherThemeColors.inverseSurfaceLight,
        inverseOnSurface = TogetherThemeColors.inverseOnSurfaceLight,
        inversePrimary = TogetherThemeColors.inversePrimaryLight,
        surfaceDim = TogetherThemeColors.surfaceDimLight,
        surfaceBright = TogetherThemeColors.surfaceBrightLight,
        surfaceContainerLowest = TogetherThemeColors.surfaceContainerLowestLight,
        surfaceContainerLow = TogetherThemeColors.surfaceContainerLowLight,
        surfaceContainer = TogetherThemeColors.surfaceContainerLight,
        surfaceContainerHigh = TogetherThemeColors.surfaceContainerHighLight,
        surfaceContainerHighest = TogetherThemeColors.surfaceContainerHighestLight,
    )

    val darkScheme = darkColorScheme(
        primary = TogetherThemeColors.primaryDark,
        onPrimary = TogetherThemeColors.onPrimaryDark,
        primaryContainer = TogetherThemeColors.primaryContainerDark,
        onPrimaryContainer = TogetherThemeColors.onPrimaryContainerDark,
        secondary = TogetherThemeColors.secondaryDark,
        onSecondary = TogetherThemeColors.onSecondaryDark,
        secondaryContainer = TogetherThemeColors.secondaryContainerDark,
        onSecondaryContainer = TogetherThemeColors.onSecondaryContainerDark,
        tertiary = TogetherThemeColors.tertiaryDark,
        onTertiary = TogetherThemeColors.onTertiaryDark,
        tertiaryContainer = TogetherThemeColors.tertiaryContainerDark,
        onTertiaryContainer = TogetherThemeColors.onTertiaryContainerDark,
        error = TogetherThemeColors.errorDark,
        onError = TogetherThemeColors.onErrorDark,
        errorContainer = TogetherThemeColors.errorContainerDark,
        onErrorContainer = TogetherThemeColors.onErrorContainerDark,
        background = TogetherThemeColors.backgroundDark,
        onBackground = TogetherThemeColors.onBackgroundDark,
        surface = TogetherThemeColors.surfaceDark,
        onSurface = TogetherThemeColors.onSurfaceDark,
        surfaceVariant = TogetherThemeColors.surfaceVariantDark,
        onSurfaceVariant = TogetherThemeColors.onSurfaceVariantDark,
        outline = TogetherThemeColors.outlineDark,
        outlineVariant = TogetherThemeColors.outlineVariantDark,
        scrim = TogetherThemeColors.scrimDark,
        inverseSurface = TogetherThemeColors.inverseSurfaceDark,
        inverseOnSurface = TogetherThemeColors.inverseOnSurfaceDark,
        inversePrimary = TogetherThemeColors.inversePrimaryDark,
        surfaceDim = TogetherThemeColors.surfaceDimDark,
        surfaceBright = TogetherThemeColors.surfaceBrightDark,
        surfaceContainerLowest = TogetherThemeColors.surfaceContainerLowestDark,
        surfaceContainerLow = TogetherThemeColors.surfaceContainerLowDark,
        surfaceContainer = TogetherThemeColors.surfaceContainerDark,
        surfaceContainerHigh = TogetherThemeColors.surfaceContainerHighDark,
        surfaceContainerHighest = TogetherThemeColors.surfaceContainerHighestDark,
    )

    val mediumContrastLightColorScheme = lightColorScheme(
        primary = TogetherThemeColors.primaryLightMediumContrast,
        onPrimary = TogetherThemeColors.onPrimaryLightMediumContrast,
        primaryContainer = TogetherThemeColors.primaryContainerLightMediumContrast,
        onPrimaryContainer = TogetherThemeColors.onPrimaryContainerLightMediumContrast,
        secondary = TogetherThemeColors.secondaryLightMediumContrast,
        onSecondary = TogetherThemeColors.onSecondaryLightMediumContrast,
        secondaryContainer = TogetherThemeColors.secondaryContainerLightMediumContrast,
        onSecondaryContainer = TogetherThemeColors.onSecondaryContainerLightMediumContrast,
        tertiary = TogetherThemeColors.tertiaryLightMediumContrast,
        onTertiary = TogetherThemeColors.onTertiaryLightMediumContrast,
        tertiaryContainer = TogetherThemeColors.tertiaryContainerLightMediumContrast,
        onTertiaryContainer = TogetherThemeColors.onTertiaryContainerLightMediumContrast,
        error = TogetherThemeColors.errorLightMediumContrast,
        onError = TogetherThemeColors.onErrorLightMediumContrast,
        errorContainer = TogetherThemeColors.errorContainerLightMediumContrast,
        onErrorContainer = TogetherThemeColors.onErrorContainerLightMediumContrast,
        background = TogetherThemeColors.backgroundLightMediumContrast,
        onBackground = TogetherThemeColors.onBackgroundLightMediumContrast,
        surface = TogetherThemeColors.surfaceLightMediumContrast,
        onSurface = TogetherThemeColors.onSurfaceLightMediumContrast,
        surfaceVariant = TogetherThemeColors.surfaceVariantLightMediumContrast,
        onSurfaceVariant = TogetherThemeColors.onSurfaceVariantLightMediumContrast,
        outline = TogetherThemeColors.outlineLightMediumContrast,
        outlineVariant = TogetherThemeColors.outlineVariantLightMediumContrast,
        scrim = TogetherThemeColors.scrimLightMediumContrast,
        inverseSurface = TogetherThemeColors.inverseSurfaceLightMediumContrast,
        inverseOnSurface = TogetherThemeColors.inverseOnSurfaceLightMediumContrast,
        inversePrimary = TogetherThemeColors.inversePrimaryLightMediumContrast,
        surfaceDim = TogetherThemeColors.surfaceDimLightMediumContrast,
        surfaceBright = TogetherThemeColors.surfaceBrightLightMediumContrast,
        surfaceContainerLowest = TogetherThemeColors.surfaceContainerLowestLightMediumContrast,
        surfaceContainerLow = TogetherThemeColors.surfaceContainerLowLightMediumContrast,
        surfaceContainer = TogetherThemeColors.surfaceContainerLightMediumContrast,
        surfaceContainerHigh = TogetherThemeColors.surfaceContainerHighLightMediumContrast,
        surfaceContainerHighest = TogetherThemeColors.surfaceContainerHighestLightMediumContrast,
    )

    val highContrastLightColorScheme = lightColorScheme(
        primary = TogetherThemeColors.primaryLightHighContrast,
        onPrimary = TogetherThemeColors.onPrimaryLightHighContrast,
        primaryContainer = TogetherThemeColors.primaryContainerLightHighContrast,
        onPrimaryContainer = TogetherThemeColors.onPrimaryContainerLightHighContrast,
        secondary = TogetherThemeColors.secondaryLightHighContrast,
        onSecondary = TogetherThemeColors.onSecondaryLightHighContrast,
        secondaryContainer = TogetherThemeColors.secondaryContainerLightHighContrast,
        onSecondaryContainer = TogetherThemeColors.onSecondaryContainerLightHighContrast,
        tertiary = TogetherThemeColors.tertiaryLightHighContrast,
        onTertiary = TogetherThemeColors.onTertiaryLightHighContrast,
        tertiaryContainer = TogetherThemeColors.tertiaryContainerLightHighContrast,
        onTertiaryContainer = TogetherThemeColors.onTertiaryContainerLightHighContrast,
        error = TogetherThemeColors.errorLightHighContrast,
        onError = TogetherThemeColors.onErrorLightHighContrast,
        errorContainer = TogetherThemeColors.errorContainerLightHighContrast,
        onErrorContainer = TogetherThemeColors.onErrorContainerLightHighContrast,
        background = TogetherThemeColors.backgroundLightHighContrast,
        onBackground = TogetherThemeColors.onBackgroundLightHighContrast,
        surface = TogetherThemeColors.surfaceLightHighContrast,
        onSurface = TogetherThemeColors.onSurfaceLightHighContrast,
        surfaceVariant = TogetherThemeColors.surfaceVariantLightHighContrast,
        onSurfaceVariant = TogetherThemeColors.onSurfaceVariantLightHighContrast,
        outline = TogetherThemeColors.outlineLightHighContrast,
        outlineVariant = TogetherThemeColors.outlineVariantLightHighContrast,
        scrim = TogetherThemeColors.scrimLightHighContrast,
        inverseSurface = TogetherThemeColors.inverseSurfaceLightHighContrast,
        inverseOnSurface = TogetherThemeColors.inverseOnSurfaceLightHighContrast,
        inversePrimary = TogetherThemeColors.inversePrimaryLightHighContrast,
        surfaceDim = TogetherThemeColors.surfaceDimLightHighContrast,
        surfaceBright = TogetherThemeColors.surfaceBrightLightHighContrast,
        surfaceContainerLowest = TogetherThemeColors.surfaceContainerLowestLightHighContrast,
        surfaceContainerLow = TogetherThemeColors.surfaceContainerLowLightHighContrast,
        surfaceContainer = TogetherThemeColors.surfaceContainerLightHighContrast,
        surfaceContainerHigh = TogetherThemeColors.surfaceContainerHighLightHighContrast,
        surfaceContainerHighest = TogetherThemeColors.surfaceContainerHighestLightHighContrast,
    )

    val mediumContrastDarkColorScheme = darkColorScheme(
        primary = TogetherThemeColors.primaryDarkMediumContrast,
        onPrimary = TogetherThemeColors.onPrimaryDarkMediumContrast,
        primaryContainer = TogetherThemeColors.primaryContainerDarkMediumContrast,
        onPrimaryContainer = TogetherThemeColors.onPrimaryContainerDarkMediumContrast,
        secondary = TogetherThemeColors.secondaryDarkMediumContrast,
        onSecondary = TogetherThemeColors.onSecondaryDarkMediumContrast,
        secondaryContainer = TogetherThemeColors.secondaryContainerDarkMediumContrast,
        onSecondaryContainer = TogetherThemeColors.onSecondaryContainerDarkMediumContrast,
        tertiary = TogetherThemeColors.tertiaryDarkMediumContrast,
        onTertiary = TogetherThemeColors.onTertiaryDarkMediumContrast,
        tertiaryContainer = TogetherThemeColors.tertiaryContainerDarkMediumContrast,
        onTertiaryContainer = TogetherThemeColors.onTertiaryContainerDarkMediumContrast,
        error = TogetherThemeColors.errorDarkMediumContrast,
        onError = TogetherThemeColors.onErrorDarkMediumContrast,
        errorContainer = TogetherThemeColors.errorContainerDarkMediumContrast,
        onErrorContainer = TogetherThemeColors.onErrorContainerDarkMediumContrast,
        background = TogetherThemeColors.backgroundDarkMediumContrast,
        onBackground = TogetherThemeColors.onBackgroundDarkMediumContrast,
        surface = TogetherThemeColors.surfaceDarkMediumContrast,
        onSurface = TogetherThemeColors.onSurfaceDarkMediumContrast,
        surfaceVariant = TogetherThemeColors.surfaceVariantDarkMediumContrast,
        onSurfaceVariant = TogetherThemeColors.onSurfaceVariantDarkMediumContrast,
        outline = TogetherThemeColors.outlineDarkMediumContrast,
        outlineVariant = TogetherThemeColors.outlineVariantDarkMediumContrast,
        scrim = TogetherThemeColors.scrimDarkMediumContrast,
        inverseSurface = TogetherThemeColors.inverseSurfaceDarkMediumContrast,
        inverseOnSurface = TogetherThemeColors.inverseOnSurfaceDarkMediumContrast,
        inversePrimary = TogetherThemeColors.inversePrimaryDarkMediumContrast,
        surfaceDim = TogetherThemeColors.surfaceDimDarkMediumContrast,
        surfaceBright = TogetherThemeColors.surfaceBrightDarkMediumContrast,
        surfaceContainerLowest = TogetherThemeColors.surfaceContainerLowestDarkMediumContrast,
        surfaceContainerLow = TogetherThemeColors.surfaceContainerLowDarkMediumContrast,
        surfaceContainer = TogetherThemeColors.surfaceContainerDarkMediumContrast,
        surfaceContainerHigh = TogetherThemeColors.surfaceContainerHighDarkMediumContrast,
        surfaceContainerHighest = TogetherThemeColors.surfaceContainerHighestDarkMediumContrast,
    )

    val highContrastDarkColorScheme = darkColorScheme(
        primary = TogetherThemeColors.primaryDarkHighContrast,
        onPrimary = TogetherThemeColors.onPrimaryDarkHighContrast,
        primaryContainer = TogetherThemeColors.primaryContainerDarkHighContrast,
        onPrimaryContainer = TogetherThemeColors.onPrimaryContainerDarkHighContrast,
        secondary = TogetherThemeColors.secondaryDarkHighContrast,
        onSecondary = TogetherThemeColors.onSecondaryDarkHighContrast,
        secondaryContainer = TogetherThemeColors.secondaryContainerDarkHighContrast,
        onSecondaryContainer = TogetherThemeColors.onSecondaryContainerDarkHighContrast,
        tertiary = TogetherThemeColors.tertiaryDarkHighContrast,
        onTertiary = TogetherThemeColors.onTertiaryDarkHighContrast,
        tertiaryContainer = TogetherThemeColors.tertiaryContainerDarkHighContrast,
        onTertiaryContainer = TogetherThemeColors.onTertiaryContainerDarkHighContrast,
        error = TogetherThemeColors.errorDarkHighContrast,
        onError = TogetherThemeColors.onErrorDarkHighContrast,
        errorContainer = TogetherThemeColors.errorContainerDarkHighContrast,
        onErrorContainer = TogetherThemeColors.onErrorContainerDarkHighContrast,
        background = TogetherThemeColors.backgroundDarkHighContrast,
        onBackground = TogetherThemeColors.onBackgroundDarkHighContrast,
        surface = TogetherThemeColors.surfaceDarkHighContrast,
        onSurface = TogetherThemeColors.onSurfaceDarkHighContrast,
        surfaceVariant = TogetherThemeColors.surfaceVariantDarkHighContrast,
        onSurfaceVariant = TogetherThemeColors.onSurfaceVariantDarkHighContrast,
        outline = TogetherThemeColors.outlineDarkHighContrast,
        outlineVariant = TogetherThemeColors.outlineVariantDarkHighContrast,
        scrim = TogetherThemeColors.scrimDarkHighContrast,
        inverseSurface = TogetherThemeColors.inverseSurfaceDarkHighContrast,
        inverseOnSurface = TogetherThemeColors.inverseOnSurfaceDarkHighContrast,
        inversePrimary = TogetherThemeColors.inversePrimaryDarkHighContrast,
        surfaceDim = TogetherThemeColors.surfaceDimDarkHighContrast,
        surfaceBright = TogetherThemeColors.surfaceBrightDarkHighContrast,
        surfaceContainerLowest = TogetherThemeColors.surfaceContainerLowestDarkHighContrast,
        surfaceContainerLow = TogetherThemeColors.surfaceContainerLowDarkHighContrast,
        surfaceContainer = TogetherThemeColors.surfaceContainerDarkHighContrast,
        surfaceContainerHigh = TogetherThemeColors.surfaceContainerHighDarkHighContrast,
        surfaceContainerHighest = TogetherThemeColors.surfaceContainerHighestDarkHighContrast,
    )
}